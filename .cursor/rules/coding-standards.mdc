---
globs: *.ts,*.tsx,*.js,*.jsx
description: TypeScript/React 코딩 표준 및 규칙
---

# 코딩 표준 및 규칙

## TypeScript 설정

- **타겟**: ES2017
- **모듈 시스템**: ES Modules (ESM)
- **엄격 모드**: 활성화
- **경로 별칭**: `@/*` → `./src/*`

## React 개발 규칙

- **컴포넌트**: 함수형 컴포넌트 사용
- **JSX Runtime**: React 17+ 자동 JSX 변환 사용
- **Props 타입**: TypeScript 인터페이스로 정의
- **이벤트 핸들러**: 화살표 함수 또는 useCallback 사용
- **UI 컴포넌트**: daisyUI 클래스 우선 사용, 커스텀 스타일은 Tailwind 유틸리티 클래스 활용

## ESLint 규칙 (주요)

- **Import 정렬**: 카테고리별 그룹화, 알파벳 순 정렬
- **사용하지 않는 Import**: 자동 제거
- **React Hooks**: 의존성 배열 검증
- **접근성**: jsx-a11y 플러그인 활성화
- **상대 경로 Import**: 금지 (절대 경로 사용)

## 코드 스타일

- **세미콜론**: 사용
- **따옴표**: 작은따옴표 (single quotes)
- **들여쓰기**: 2칸 공백
- **라인 길이**: Prettier 기본 설정
- **파일 확장자**: .tsx (React 컴포넌트), .ts (유틸리티)

## 네이밍 컨벤션

- **컴포넌트**: PascalCase (예: `UserProfile`)
- **인터페이스**: PascalCase (예: `UserData`)
- **타입 별칭**: PascalCase (예: `ApiResponse`)
- **함수/변수**: camelCase (예: `getUserData`)
- **상수**: UPPER_SNAKE_CASE (예: `API_BASE_URL`)

## daisyUI 사용 규칙

- **컴포넌트 클래스**: daisyUI 제공 클래스 우선 사용 (예: `btn`, `card`, `modal`)
- **테마**: daisyUI 테마 시스템 활용 (예: `data-theme="dark"`)
- **커스터마이징**: Tailwind 유틸리티 클래스로 daisyUI 컴포넌트 확장
- **일관성**: 프로젝트 전체에서 동일한 daisyUI 컴포넌트 패턴 유지

## 반응형 웹 디자인 규칙

- **모바일 퍼스트**: 모든 디자인은 모바일부터 시작하여 데스크톱으로 확장
- **브레이크포인트**: Tailwind CSS 표준 브레이크포인트 사용
  - `sm:` (640px 이상) - 태블릿 세로
  - `md:` (768px 이상) - 태블릿 가로
  - `lg:` (1024px 이상) - 데스크톱
  - `xl:` (1280px 이상) - 대형 데스크톱
  - `2xl:` (1536px 이상) - 초대형 화면
- **반응형 클래스**: 모든 레이아웃, 크기, 간격에 반응형 클래스 적용 필수
- **컨테이너**: `container` 클래스와 반응형 패딩 조합 사용
- **그리드**: `grid-cols-1 md:grid-cols-2 lg:grid-cols-3` 패턴으로 반응형 그리드 구성
- **텍스트 크기**: `text-sm md:text-base lg:text-lg` 패턴으로 반응형 타이포그래피
- **간격**: `p-4 md:p-6 lg:p-8` 패턴으로 반응형 패딩/마진 적용
